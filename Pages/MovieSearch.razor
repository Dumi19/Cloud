@page "/search"
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations
@inject IDataLayer DataLayer
@using Models.Domain

<h1>Search for a movie title</h1>

<input class="border-4 w-1/3 rounded m-6 p-6 h-8 border-blue-300" @bind-value="SearchTerm" @bind-value:event="oninput"
       placeholder="Search by title (must contain at least 3 letters)" />
<button type="button" class="btn btn-info" @onclick=SearchForMovie>Search</button>

    

@if (item == null)
{
    <p>Nothing to see here</p>
}
else
{ <div class="row" >
    @foreach (var element in item.results)
    {<div class="col-md-4">
    <div  style="margin:10px">
        <a href=@($"/movie/{element.id}") asp-route-id="@element.id"> <img class="movie-image" style="width:170px !important" src="http://image.tmdb.org/t/p/w500/@element.poster_path" /></a>
    </div>
    <div>
        <a href=@($"/movie/{element.id}") asp-route-id="@element.id"> @element.title</a>
    </div>
    </div>
    }
</div>  
        
    }


@code {
    [StringLength(30, MinimumLength = 3, ErrorMessage = "Minimum 3 characters")]
    string SearchTerm { get; set; } = "";
    Root item { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    async Task SearchForMovie()
    {
        try
        {
            Root result = await DataLayer.MovieByName(SearchTerm);
            item = result;

        }
        catch (Exception e)
        {
            Console.WriteLine(e.StackTrace);
        }
    }
}