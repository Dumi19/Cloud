@page "/movie/{id:int}"
@inject IDataLayer DataLayer
@using Models.Domain

<h3>Movie Page</h3>

@if (item == null || casting == null)
{
    <span>error</span>
}
else
{
    <table class="table" border="0" width="500" height="500" cellspacing="0">
        <tr>
            @item.original_title
        </tr>
        <a href=@($"/movie/{item.id}") asp-route-id="@item.id"> <img class="movie-image" style="width:170px !important" src="http://image.tmdb.org/t/p/w500/@item.poster_path" /></a>

        <tr>
            @item.overview
        </tr>
        <br />
        <tr>
            Current Rating: @item.vote_average ★(@item.vote_count voted)
        </tr>
        <br />
        <h2>Casting list</h2>
        <table>
           <th colspan="1">Actor name:</th><th colspan="2">Charachter</th>
            
            @foreach (var item in casting)
            {
                <tbody>
                    <tr>
                        <td>@item.name </td>
                        <td>@item.character</td>
                    </tr>
                    
                </tbody>
            }
            
        </table>
        <br />

    </table>
    <button type="button" class="btn btn-info" @onclick=AddToFavorite>AddToFavorite</button>
}

@code {
    [Parameter]
    public int id { get; set; }
    Result item { get; set; }
    IList<Cast> casting { get; set; }
    protected async override Task OnInitializedAsync()
    {
        var items = await DataLayer.MovieById(id);
        item = items;
        var cast = await DataLayer.Cast(id);
        casting = cast;
    }

    async Task AddToFavorite()
    {
        await DataLayer.AddToFavorites(id);
    }

}
